{"version":3,"sources":["contextState.js","buttons.js","App.js","index.js"],"names":["CalcContext","createContext","CalculationProvider","props","useState","calc","setcalc","Provider","value","children","Buttons","array","useRef","displayNum","setDisplayNum","number","setnumber","useContext","clearCalc","current","handleClick","val","console","log","includes","isNaN","length","parseInt","prev","slice","operatorClick","operator","parseFloat","push","className","id","onClick","findIndex","element","indi","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3d9783.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\n\r\nexport const CalculationProvider = (props) => {\r\n  const [calc, setcalc] = useState(false);\r\n\r\n  return <CalcContext.Provider value={[calc, setcalc]}>{props.children}</CalcContext.Provider>;\r\n};\r\n","import React from \"react-dom\";\r\nimport { useContext, useState, useRef } from \"react\";\r\nimport { CalcContext } from \"./contextState\";\r\n\r\nfunction Buttons() {\r\n  const array = useRef([]);\r\n  const [displayNum, setDisplayNum] = useState([]);\r\n  const [number, setnumber] = useState([]);\r\n  const [calc, setcalc] = useContext(CalcContext);\r\n  const clearCalc = () => {\r\n    setnumber([]);\r\n    array.current = [];\r\n    setDisplayNum([\"0\"]);\r\n    setcalc(false);\r\n  };\r\n  const handleClick = (val) => {\r\n    if (number === \"0\" && val === 0) {\r\n      console.log(\"zeros\");\r\n      return null;\r\n    }\r\n    if (number.includes(\".\") && val === \".\") {\r\n      console.log(\"contains .\");\r\n      return null;\r\n    }\r\n    if (calc && isNaN(number[number.length - 1]) === false && typeof parseInt(val) === \"number\") {\r\n      console.log(\"reset\");\r\n      clearCalc();\r\n      setnumber([val]);\r\n    } else {\r\n      setnumber((prev) => prev + val);\r\n    }\r\n    setDisplayNum(array.current.slice(0));\r\n  };\r\n\r\n  const operatorClick = (operator) => {\r\n    console.log(number);\r\n    if ((operator === \"/\" || operator === \"*\") && number.length === 0 && array.current.length === 0) {\r\n      return null;\r\n    } else if (number.length === 0 && (operator === \"-\" || operator === \"+\")) {\r\n      handleClick(operator);\r\n    } else if ((operator === \"/\" || operator === \"*\" || \"+\") && isNaN(parseFloat(number))) {\r\n      console.log(\"Help\");\r\n      setnumber(\"\");\r\n      array.current[array.current.length - 1] = operator;\r\n    } else if (isNaN(number)) {\r\n      console.log(\"Not a number; return null\");\r\n      return null;\r\n    } else {\r\n      console.log(\"add to calculation\");\r\n      array.current.push(parseFloat(number));\r\n      array.current.push(operator);\r\n      setnumber([]);\r\n    }\r\n\r\n    setDisplayNum(array.current.slice(0));\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (array.current.length === 0 || isNaN(number) || number.length === 0) {\r\n      console.log(\"Nothing to Calculate\");\r\n      return null;\r\n    } else if (isNaN(number) === false) {\r\n      array.current.push(parseFloat(number));\r\n      setnumber([]);\r\n    }\r\n    while (array.current.findIndex((element) => element === \"*\" || element === \"/\") > 0) {\r\n      let indi = array.current.findIndex((element) => element === \"*\" || element === \"/\");\r\n      if (array.current[indi] === \"*\") {\r\n        array.current.splice(indi - 1, 3, array.current[indi - 1] * array.current[indi + 1]);\r\n      } else if (array.current[indi] === \"/\") {\r\n        array.current.splice(indi - 1, 3, array.current[indi - 1] / array.current[indi + 1]);\r\n      }\r\n    }\r\n    while (array.current.findIndex((element) => element === \"+\" || element === \"-\") > 0) {\r\n      let indi = array.current.findIndex((element) => element === \"+\" || element === \"-\");\r\n      if (array.current[indi] === \"+\") {\r\n        array.current.splice(indi - 1, 3, array.current[indi - 1] + array.current[indi + 1]);\r\n      } else if (array.current[indi] === \"-\") {\r\n        array.current.splice(indi - 1, 3, array.current[indi - 1] - array.current[indi + 1]);\r\n      }\r\n    }\r\n    setcalc(true);\r\n    setDisplayNum([]);\r\n    setnumber([array.current.slice(0)]);\r\n    array.current = [];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>JS React Calculator</h1>\r\n      <div className=\"calculatorbox\">\r\n        <div id=\"display\">\r\n          {displayNum}\r\n          {number}\r\n        </div>\r\n        <button id=\"clear\" onClick={clearCalc}>\r\n          Clear\r\n        </button>\r\n        <button id=\"seven\" onClick={() => handleClick(7)}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" onClick={() => handleClick(8)}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" onClick={() => handleClick(9)}>\r\n          9\r\n        </button>\r\n        <button id=\"divide\" onClick={() => operatorClick(\"/\")}>\r\n          รท\r\n        </button>\r\n        <button id=\"four\" onClick={() => handleClick(4)}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" onClick={() => handleClick(5)}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" onClick={() => handleClick(6)}>\r\n          6\r\n        </button>\r\n        <button id=\"multiply\" onClick={() => operatorClick(\"*\")}>\r\n          ร\r\n        </button>\r\n        <button id=\"one\" onClick={() => handleClick(1)}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" onClick={() => handleClick(2)}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" onClick={() => handleClick(3)}>\r\n          3\r\n        </button>\r\n        <button id=\"add\" onClick={() => operatorClick(\"+\")}>\r\n          +\r\n        </button>\r\n        <button id=\"decimal\" onClick={() => handleClick(\".\")}>\r\n          .\r\n        </button>\r\n        <button id=\"zero\" onClick={() => handleClick(0)}>\r\n          0\r\n        </button>\r\n        <button id=\"equals\" onClick={calculateTotal}>\r\n          =\r\n        </button>\r\n        <button id=\"subtract\" onClick={() => operatorClick(\"-\")}>\r\n          -\r\n        </button>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from \"react-dom\";\nimport Buttons from \"./buttons\";\nimport { CalculationProvider } from \"./contextState\";\n\nfunction App() {\n  return (\n    <div>\n      <CalculationProvider>\n        <Buttons />\n      </CalculationProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}